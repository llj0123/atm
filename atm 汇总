#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#include<time.h>

struct TransactionRecord
{
	char username[100];
	time_t timestamp;//时间戳	
	int type;//交易类型 0-取钱，1-存钱，2-转出，3-转入
	int amount;//数额 
	
	struct TransactionRecord * next; 
}; 
typedef struct TransactionRecord TR;

TR * trHead=NULL;

TR * trTail=NULL; 

struct Account
{
	char username[100];
	char password[100];
	float money;
	int zh;
};


typedef struct Account Account;

Account user[1000];
int  userCount=0;
 
int curAccountIndex;//记录当前账号在user数组中的下标
int otherAccountIndex;//记录
void signIn();
void showMenu();
void showMenu1();
void showChinese();

void showEnglish();

void Transfer();
void Transfer1();
void findOtherAccount();

int findAccount(Account a);

void tuichu();

//找到返回1，否则返回0 
int findAccount(Account a)
{
	for(int i=0;i<userCount;i++)
	{	
		if((user[i].zh==a.zh)&&(strcmp(user[i].password,a.password)==0))
		{
			curAccountIndex=i;
			return 1;
		}
	}
	return 0;
}

void updatePassword()
{
    printf("\t\t\t*******************************************\n\n");
    printf("\t\t\t             下面将进行操作！\n\n");
    printf("\t\t\t*******************************************\n\n");

	printf("请输入旧密码:\n");
	char oldPassword[100]={'\0'};
	scanf("%s",oldPassword);
	if(strcmp(oldPassword,user[curAccountIndex].password)==0)
	{
		//让其修改 
		printf("请输入新密码：\n");
		scanf("%s",user[curAccountIndex].password);
		printf("修改成功！\n");
	}
	else
	{
		printf("旧密码输入错误，拒绝修改！\n");
	} 
	int p;
	printf("输入1进行下一步：");
	scanf("%d",&p);
	system("cls");
	showMenu();   
}
void updatePassword1()
{
    printf("\t\t\t*******************************************\n\n");
    printf("\t\t\t The following operations will be performed！\n\n");
    printf("\t\t\t*******************************************\n\n");

	printf("Please enter the old password:\n");
	char oldPassword[100]={'\0'};
	scanf("%s",oldPassword);
	if(strcmp(oldPassword,user[curAccountIndex].password)==0)
	{
		//让其修改 
		printf("Please enter a new password：\n");
		scanf("%s",user[curAccountIndex].password);
		printf("Modification succeeded！\n");
	}
	else
	{
		printf("The old possword is entered incorrectly.Modification is refused\n");
	} 
	int p;
	printf("Enter I to proceed to the next step：");
	scanf("%d",&p);
	system("cls");
	showMenu1();   
}

void saveMoney()
{
     printf("\t\t\t*******************************************\n\n");
	 printf("\t\t\t             下面将进行操作！\n\n");
     printf("\t\t\t*******************************************\n\n");
    printf("请注意：存款金额需是100的整数倍：\n");
	printf("请输入存款金额：\n");
	int money;
	scanf("%d",&money);

	//判断合理性
     int r;
	 r=money;

 	 if(r%100<=1)
	 {
		 printf("存款成功！\n");
		 user[curAccountIndex].money+=r;
	 	 printf("当前余额为:%f\n",user[curAccountIndex].money);
	 }
	 else 
	 {
		 printf("抱歉，你的存款金额不合法！\n");
	 }

	int p;
	printf("输入1进行下一步：");
	scanf("%d",&p);
	system("cls");
	showMenu();   
}
void saveMoney1()
{
     printf("\t\t\t*******************************************\n\n");
	 printf("\t\t\t The following operations will be performed！\n\n");
     printf("\t\t\t*******************************************\n\n");
     printf("Please note:the deposit amount must be integral multiple of 100：\n");
	 printf("Please enter the saveMoney：\n");
 	
	int money;
	scanf("%d",&money);

	//判断合理性
     int r;
	 r=money;

 	 if(r%100<=1)
	 {
		 printf("Deposit succeeded！\n");
		 user[curAccountIndex].money+=r;
	 	 printf("Current account balance is :%f\n",user[curAccountIndex].money);
	 }
	 else 
	 {
		 printf("Sorry,your deposit amount is illegal！\n");
	 }

	int p;
	printf("Enter I to proceed to the next step：");
	scanf("%d",&p);
	system("cls");
	showMenu1();   
}


void drawMoney()
{
     printf("\t\t\t*******************************************\n\n");
	 printf("\t\t\t             下面将进行操作！\n\n");
     printf("\t\t\t*******************************************\n\n");
    printf("请注意：取款金额需是100的整数倍：\n");
	printf("请输入取款金额：");

	int money;
	scanf("%d",&money);
     int q;
	 q=money;
	//判断合理性
 	 if(q%100==0)
	 {
		 if(user[curAccountIndex].money<money)
		 {
			 printf("余额不足!\n");
		 }
		 else
		 {
			 printf("取款成功!\n");
			 user[curAccountIndex].money-=q;
			 printf("当前余额为:%f\n",user[curAccountIndex].money);
		 }
	 }
	 else
	 {
		 printf("抱歉！您的取款金额不合法！\n");
	 }

	int p;
	printf("输入1进行下一步：");
	scanf("%d",&p);
	system("cls");
	showMenu();	
}
void drawMoney1()
{
     printf("\t\t\t*******************************************\n\n");
	 printf("\t\t\t The following operations will be performed！\n\n");
     printf("\t\t\t*******************************************\n\n");
    printf("Please note:the withdrawal amount must be integral multiple of 100：\n");
	printf("Please enter the drawMoney：");

	int money;
	scanf("%d",&money);
     int q;
	 q=money;
	//判断合理性
 	 if(q%100==0)
	 {
		 if(user[curAccountIndex].money<money)
		 {
			 printf("Sorry,your credit is running low!\n");
		 }
		 else
		 {
			 printf("Withdrawal succeeded!\n");
			 user[curAccountIndex].money-=q;
			 printf("Current account balance is  :%f\n",user[curAccountIndex].money);
		 }
	 }
	 else
	 {
		 printf("Sorry,your withdrawal ammount is illegal！\n");
	 }

	int p;
	printf("Enter I to proceed to the next step：");
	scanf("%d",&p);
	system("cls");
	showMenu1();	
}


int findOtherAccount(int otherUsername)
{
	for(int i=0;i<userCount;i++)
	{
		if(user[i].zh==otherUsername)
		{
			otherAccountIndex=i;
			return 1;
		}
	}
	return 0;
}

void Transfer()
{
	 printf("\t\t\t*******************************************\n\n");
	 printf("\t\t\t             下面将进行操作！\n\n");
     printf("\t\t\t*******************************************\n\n");

	int otherUsername;

	//输入对方账户
	printf("请输入对方账户：");
	
	scanf("%d",&otherUsername);

	//验证账号的合法性
	if(findOtherAccount(otherUsername))
	{
		int money;

		//输入转账金额
		printf("请输入转账金额：");
		
		scanf("%d",&money);

		//验证金额合法性
		if((user[curAccountIndex].money)>=money)
		{
			//记录转账记录：转出(创建交易记录结点，初始化，添加到链表)
			TR * newNodeOut=(TR*)malloc(sizeof(TR));

			//转账（原账户的钱减少，对方账户的钱增多）
			user[curAccountIndex].money-=money;
			user[otherAccountIndex].money+=money;

			//输出提示转账成功
			printf("转账成功！\n");

			printf("当前账户余额为%f\n",user[curAccountIndex].money);
			printf("对方账户余额为%f\n",user[otherAccountIndex].money);
		
			newNodeOut->next=NULL;
			strcpy(newNodeOut->username,user[curAccountIndex].username);
			newNodeOut->type=2;
			newNodeOut->amount=money;
			newNodeOut->timestamp=time(NULL);
			
			if(trHead==NULL)
			{
				trHead=newNodeOut;
				trTail=newNodeOut; 
			}
			else
			{
				trTail->next=newNodeOut;
				trTail=newNodeOut;
			}

			//记录转账记录：转入
			TR * newNodeIn=(TR*)malloc(sizeof(TR));
		
			newNodeIn->next=NULL;
			strcpy(newNodeIn->username,user[curAccountIndex].username);
			newNodeIn->type=3;
			newNodeIn->amount=money;
			newNodeIn->timestamp=time(NULL);
			
			if(trHead==NULL)
			{
				trHead=newNodeIn;
				trTail=newNodeIn; 
			}
			else
			{
				trTail->next=newNodeIn;
				trTail=newNodeIn;
			}
		}
		else
		{
			printf("余额不足!\n");
		}
	}
	else
	{
		printf("账户错误！\n");
	}
	int p;
	printf("输入1进行下一步：");
	scanf("%d",&p);
	system("cls");
	showMenu();
}
//English
void Transfer1()
{
	 printf("\t\t\t*******************************************\n\n");
	 printf("\t\t\tThe following operations will be preformed！\n\n");
     printf("\t\t\t*******************************************\n\n");

	int otherUsername;

	//输入对方账户
	printf("Please enter opposite account：");
	
	scanf("%d",&otherUsername);

	//验证账号的合法性
	if(findOtherAccount(otherUsername))
	{
		int money;

		//输入转账金额
		printf("Please enter the tranfer amount：");
		
		scanf("%d",&money);

		//验证金额合法性
		if((user[curAccountIndex].money)>=money)
		{
			//记录转账记录：转出(创建交易记录结点，初始化，添加到链表)
			TR * newNodeOut=(TR*)malloc(sizeof(TR));

			//转账（原账户的钱减少，对方账户的钱增多）
			user[curAccountIndex].money-=money;
			user[otherAccountIndex].money+=money;

			//输出提示转账成功
			printf("Successful transfer！\n");

			printf("Current account balance is   %f\n",user[curAccountIndex].money);
			printf("The opposite account balance is  %f\n",user[otherAccountIndex].money);
		
			newNodeOut->next=NULL;
			strcpy(newNodeOut->username,user[curAccountIndex].username);
			newNodeOut->type=2;
			newNodeOut->amount=money;
			newNodeOut->timestamp=time(NULL);
			
			if(trHead==NULL)
			{
				trHead=newNodeOut;
				trTail=newNodeOut; 
			}
			else
			{
				trTail->next=newNodeOut;
				trTail=newNodeOut;
			}

			//记录转账记录：转入
			TR * newNodeIn=(TR*)malloc(sizeof(TR));
		
			newNodeIn->next=NULL;
			strcpy(newNodeIn->username,user[curAccountIndex].username);
			newNodeIn->type=3;
			newNodeIn->amount=money;
			newNodeIn->timestamp=time(NULL);
			
			if(trHead==NULL)
			{
				trHead=newNodeIn;
				trTail=newNodeIn; 
			}
			else
			{
				trTail->next=newNodeIn;
				trTail=newNodeIn;
			}
		}
		else
		{
			printf("Sorry your credit is running low!\n");
		}
	}
	else
	{
		printf("Account Error！\n");
	}
	int p;
	printf("Enter I to proceed to the next step：");
	scanf("%d",&p);
	system("cls");
	showMenu1();
}

void showMenu()
{
    	int j;
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("\t\t\t|\t1.修改密码\t|\t  2.取款\t|\n\n");
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("\t\t\t|\t3.存款    \t|\t  4.转账\t|\n\n");
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("\t\t\t|\t5.退出程序\t|\t        \t|\n\n");
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("请选择你所需要的操作：");
	    scanf("%d",&j);

	    if(j==1)
		{
			system("cls");
            updatePassword();
		}
	
	    else if(j==2)
		{
			system("cls");
		    drawMoney();
		}
	    else if(j==3)
		{
			system("cls");
		    saveMoney();
		}
		else if(j==4)
		{
			system("cls");
			Transfer();
		}
		else if(j==5)
		{
			system("cls");
			tuichu();
		}
		
	    printf("\n");
	    system("cls");
}
//English
void showMenu1()
{
    	int j;
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("\t\t\t|\t1.Change Password\t|\t  2.Draw Money\t|\n\n");
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("\t\t\t|\t3.Save Money    \t|\t  4.Tranfer\t|\n\n");
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("\t\t\t|\t5.Exit Program\t|\t        \t|\n\n");
		printf("\t\t\t-------------------------------------------------\n\n");
		printf("Please select the action you want：");
	    scanf("%d",&j);

	    if(j==1)
		{
			system("cls");
            updatePassword1();
		}
	
	    else if(j==2)
		{
			system("cls");
		    drawMoney1();
		}
	    else if(j==3)
		{
			system("cls");
		    saveMoney1();
		}
		else if(j==4)
		{
			system("cls");
			Transfer1();
		}
		else if(j==5)
		{
			system("cls");
			tuichu();
		}
		
	    printf("\n");
	    system("cls");
}


void homePage()
{
	system("cls");
    showMenu();
}
//English
void homePage1()
{
	system("cls");
    showMenu1();
}

int order=0;
void signIn1()
{
	
		Account a; 
        printf("\t\t\t*******************************************\n\n");
		printf("\t\t\t                  欢迎登录\n\n");
        printf("\t\t\t*******************************************\n\n");
		printf("请输入账号：\n");
		scanf("%d",&a.zh);
		
		printf("请输入密码：\n");
		scanf("%s",a.password);
		if(findAccount(a))
		{
			homePage();
			return;
		}
		else
		{
			printf("登录失败!\n");
		}

}
//English
void signIn11()
{
	
		Account a; 
        printf("\t\t\t*******************************************\n\n");
		printf("\t\t\t           Welcome to login!\n\n");
        printf("\t\t\t*******************************************\n\n");
		printf("Please enter the account：\n");
		scanf("%d",&a.zh);
		
		printf("Please enter the password：\n");
		scanf("%s",a.password);
		if(findAccount(a))
		{
			homePage1();
			return;
		}
		else
		{
			printf("Login failed!\n");
		}

}

void signUp1()
{
	printf("请输入姓名：\n");
	scanf("%s",user[userCount].username);

	printf("请输入密码：\n");
	scanf("%s",user[userCount].password);

    user[userCount].zh = 1000 + userCount;

	printf("恭喜您,开户成功!\n\n\n");

	printf("您的账号是：%d\n\n\n\n",user[userCount].zh);

	user[userCount].money=0.0f;

	userCount++;
	
}
//English
void signUp11()
{
	printf("Please enter your name：\n");
	scanf("%s",user[userCount].username);

	printf("Please enter your password：\n");
	scanf("%s",user[userCount].password);

    user[userCount].zh = 1000 + userCount;

	printf("Congratulations on your successful account opening!\n\n\n");

	printf("Your account number is：%d\n\n\n\n",user[userCount].zh);

	user[userCount].money=0.0f;

	userCount++;
	
}

void signUp()
{

    printf("\t\t\t******************************************************\n\n");
	printf("\t\t\t******************************************************\n\n");
	printf("\t\t\t*************  欢迎使用ATM自助存取款机!  *************\n\n");
	printf("\t\t\t******************************************************\n\n");
	printf("\t\t\t******************************************************\n\n");
    
	printf("\t\t\t-------------------------------------------------\n\n");
    printf("\t\t\t|\t1.中文   \t|\t2.English|\n");
	printf("\t\t\t-------------------------------------------------\n\n");
   
	char c;
	scanf("%c",&c);
	if(c=='1')
	{
		system("cls");
		showChinese();//显示中文菜单
	}
	else if(c=='2')
	{
		showEnglish();//显示英文菜单
	}	
}

void signIn()
{

    printf("\t\t\t******************************************************\n\n");
	printf("\t\t\t******************************************************\n\n");
	printf("\t\t\t*************  欢迎使用ATM自助存取款机!  *************\n\n");
	printf("\t\t\t******************************************************\n\n");
	printf("\t\t\t******************************************************\n\n");
    
	printf("\t\t\t-------------------------------------------------\n\n");
    printf("\t\t\t|\t1.中文   \t|\t2.English|\n");
	printf("\t\t\t-------------------------------------------------\n\n");
	char c;
	scanf("%c",&c);
	if(c=='1')
	{
		signIn1();
	}
	else if(c=='2')
	{
		signIn11();
	}	
}

void showChinese()
{  
	printf("\t\t\t-------------------------------------------------\n\n");
    printf("\t\t\t|\t1.创建账户\t|\t  2.登录\t|\n\n");
	printf("\t\t\t-------------------------------------------------\n\n");
    
	int m;
	scanf("%d",&m);
	if(m==1)
	{
		system("cls");
		signUp1();
	}
	else if(m==2)
	{
		system("cls");
		signIn1();
	}
}

void showEnglish()
{
    printf("\t\t\t*******************************************\n\n");
    printf("\t\t\t     1.CREATE ACCOUNT  2.SIGN IN\n\n");
    printf("\t\t\t*******************************************\n\n");
	int m;
	scanf("%d",&m);
	if(m==1)
	{
		signUp11();
	}
	else if(m==2)
	{
		signIn11();
	}	
}

void tuichu()
{
	time_t timestamp=time(NULL);
    printf("%ld\n",timestamp);
    char * ct=ctime(& timestamp);
    printf("%s\n",ct);

	void saveData();
	saveData();

	exit(0);
}

/**
如果数据加载成功返回1
否则返回0 
*/
int loadData()
{
	FILE* fp=fopen("D:/atm.txt","r");
	if(fp==NULL)
	{
		return 0; 
	}
	else
	{
		while(!feof(fp))
		{
			fscanf(fp,"%d %s %f\n",&user[userCount].zh,user[userCount].password,&user[userCount].money);
			userCount++;
		}
		return 1;
	}

}

void saveData()
{
	FILE * fp=fopen("D:/atm.txt","w");
	for(int i=0;i<userCount;i++)
	{
		fprintf(fp," %d %s %f\n",user[i].zh,user[i].password,user[i].money);
	}
	fclose(fp);
}

int main()
{
	int status=loadData();

	if(status==1)
	{
		printf("\t\t\t加载成功！   Loading succeeded!\n");
	}
	else
	{
		printf("\t\t\t加载失败！   Loading failed!\n");
	}

    signUp();

    printf("账号  密码(account password)\n");
    for(int i=0;i<userCount;i++)
	{
    	printf("%d %s\n",user[i].zh,user[i].password);
	}
    
	signIn();
	saveData();

	return 0;
}
